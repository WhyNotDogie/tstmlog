{
    "title": "tsconfig.json with TSTMLOG",
    "description": "JSON schema for the TypeScript compiler's configuration file with TSTMLOG",
    "$schema": "http://json-schema.org/draft-07/schema",
    "allOf": [
        {
            "$ref": "https://json.schemastore.org/tsconfig"
        }
    ],
    "properties": {
        "tstmlog": {
            "description": "TSTMLOG compiler options.",
            "type": "object",
            "definitions": {
                "//": {
                    "reference": "https://typescripttolua.github.io/docs/configuration#custom-options"
                }
            },
            "properties": {
                "buildMode": {
                    "description": "Copy to a file, copy to clipboard, or both. Defaults to both.",
                    "type": "string",
                    "default": "both",
                    "enum": ["clipboard", "file", "both"]
                },
                "outName": {
                    "description": "The name of the file to output mlog to. Defaults to output.mlog.",
                    "type": "string"
                },
                "entryPoint": {
                    "description": "The entry *.ts file that will be compiled as the main file. Defaults to index.ts.",
                    "type": "string",
                    "default": "index.ts"
                },
                /*"luaLibImport": {
                    "description": "Specifies how js standard features missing in lua are imported.",
                    "type": "string",
                    "default": "require",
                    "enum": ["none", "inline", "require"]
                },*/
                "mlogTarget": {
                    "description": "Specifies the Mindustry version you want to generate MLOG for.",
                    "type": "string",
                    "default": "latest",
                    "enum": ["v8", "v7", "v6", "latest"]
                },
                "isWorld": {
                    "description": "set to true if the code generated is for world processors.",
                    "type": "boolean",
                    "default": false
                },
                //"noImplicitSelf": {
                //    "description": "If true, treats all project files as if they were prefixed with\n/** @noSelfInFile **/.",
                //    "type": "boolean",
                //    "default": false
                //},
                "noWatermark": {
                    "description": "Please do not set to true unless absolutely needed. This removes the \"Generated by TSTL\" watermark at the top of the mlog.",
                    "type": "boolean",
                    "default": false
                },
                /*"noResolvePaths": {
                    "description": "An array of import paths that should not be resolved but copied verbatim to output lua.",
                    "type": "array"
                },*/
                "sourceMapTraceback": {
                    "description": "Applies the source map to show source TS files and lines in error tracebacks.",
                    "default": false,
                    "type": "boolean"
                },
                "tstlVerbose": {
                    "description": "Give verbose tstl output, helpful when diagnosing tstl issues.",
                    "type": "boolean",
                    "default": false
                },
                "luaPlugins": {
                    "description": "List of TypeScriptToLua plugins.",
                    "type": "array",
                    "items": {
                        "description": "Describes TypeScriptToLua plugin",
                        "type": "object",
                        "required": ["name"],
                        "properties": {
                            "name": {
                                "description": "Path to the JS file, that contains the plugin code",
                                "type": "string"
                            },
                            "import": {
                                "type": "string"
                            }
                        }
                    }
                },
                "measurePerformance": {
                    "description": "Measure and report performance of the tstl compiler.",
                    "type": "boolean"
                }
            },
            "dependencies": {
                "luaBundle": ["luaBundleEntry"],
                "luaBundleEntry": ["luaBundle"]
            }
        }
    },
    "allowTrailingCommas": true
}